{
  "hash": "89c054f1a24e2b8e263ac0bf6f6f8f91",
  "result": {
    "markdown": "# Introduction {.unnumbered}\n\n> *This is a book created from markdown and executable code. See @knuth84 for additional discussion of literate programming.*\n\nI've left the boilerplate text above because 1) everyone should know about [Donald Knuth](https://www.wikiwand.com/en/Donald_Knuth) and his contributions to [computational notebooks](https://www.wikiwand.com/en/Notebook_interface), and 2) I wanted to keep a working example for the `references.qmd` and `references.bib` files when I build the book.\n\n## How the sausage is made\n\nI've included the steps for publishing this book *inside* the book because it's serves as an excellent example of the topics contained in this text. This book is [written in quarto](https://quarto.org/docs/books/) which is an '*open-source scientific and technical publishing system.*' All of the tools in this text are [open-source](https://en.wikipedia.org/wiki/Open_source), which means the source code (i.e. files) to create it are '*made freely available for possible modification and redistribution*.'\n\nThe code files used to create this book are displayed in the folder tree below:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n.\n├── _book\n├── _freeze\n├── _quarto.yml\n├── cover.png\n├── data-tech.Rproj\n├── fun-arguments.qmd\n├── fun-environments.qmd\n├── fun-names.qmd\n├── fun-structure.qmd\n├── index.qmd\n├── intro.qmd\n├── intro.rmarkdown\n├── oop-basics.qmd\n├── oop-in-r.qmd\n├── preface.qmd\n├── references.bib\n├── references.qmd\n├── renv\n└── renv.lock\n```\n:::\n:::\n\n\nThese files are stored in a [GitHub repository](https://github.com/mjfrigaard/data-tech). GitHub is a platform for hosting open source projects that use [Git](https://git-scm.com/), the world's most popular distributed version control system.\n\n## Using Git \n\nBasic knowledge of Git has become somewhat necessary when you decide to enter the data technology ecosystem (or other open-source projects). I won't be diving into the Git workflow here, but I *will* cover the commands I used to store and publish this book. \n\n1. I created a repository on GitHub.com like this one: [mjfrigaard/data-tech](https://github.com/mjfrigaard/data-tech) \n\n2. Add (`-A`) and commit (`commit -m`) the files in the book folder: \n\n\n\n````default\n$ git add -A\n$ git commit -m \"first commit\"\n````\n\n\n3. `push` local files to GitHub repo\n\n\n\n````default\n$ git remote add origin git@github.com:mjfrigaard/data-tech.git\n$ git branch -M main\n$ git push -u origin main\n````\n\n\n4. Create (checkout) an empty `gh-pages` branch\n\n\n\n````default\n$ git checkout --orphan gh-pages\nSwitched to a new branch 'gh-pages'\n$ git reset --hard \n$ git commit --allow-empty -m \"Initialising gh-pages branch\"\nInitialising gh-pages branch\n````\n\n\n5. `push` the book files to the `gh-pages` branch\n\n\n\n````default\n$ git push origin gh-pages\nEnumerating objects: 2, done.\nCounting objects: 100% (2/2), done.\nWriting objects: 100% (2/2), 176 bytes | 176.00 KiB/s, done.\nTotal 2 (delta 0), reused 0 (delta 0), pack-reused 0\nremote: \nremote: Create a pull request for 'gh-pages' on GitHub by visiting:\nremote:      https://github.com/mjfrigaard/data-tech/pull/new/gh-pages\nremote: \nTo github.com:mjfrigaard/data-tech.git\n * [new branch]      gh-pages -> gh-pages\n````\n\n\n5. Switch (`checkout`) back to `main` branch\n\n\n\n````default\n$ git checkout main\nSwitched to branch 'main'\nYour branch is up to date with 'origin/main'.\n````\n\n\n6. `publish` to `gh-pages` branch\n\n\n\n````default\n$ quarto publish gh-pages\n? Update site at https://mjfrigaard.github.io/data-tech/? (Y/n) \n````\n\n\n````default\n? Update site at https://mjfrigaard.github.io/data-tech/? (Y/n) Yes\n````\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}